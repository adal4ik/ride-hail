services:
  postgres:
    image: postgis/postgis:16-3.4-alpine
    container_name: ridehail-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-ridehail_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ridehail_pass}
      POSTGRES_DB: ${DB_NAME:-ridehail_db}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-ridehail_user} -d ${POSTGRES_DB:-ridehail_db}"]
      interval: 5s
      timeout: 5s
      retries: 15

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: ridehail-rabbitmq
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  migrate:
    container_name: migrate
    image: migrate/migrate
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations/:/migrations
    command: [
      "-path", "/migrations/",
      "-database",
      "postgres://${POSTGRES_USER:-ridehail_user}:${POSTGRES_PASSWORD:-ridehail_pass}@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-ridehail_db}?sslmode=disable",
      "up"
    ]
    env_file:
      - .env

  ride-service:
    build:
      context: .
      dockerfile: docker/ride-service.Dockerfile
    env_file: .env
    volumes:
      - ./logs/:/app/logs/
    # restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "3000:${RIDE_HTTP_PORT:-3000}"

  auth-service:
    build:
      context: .
      dockerfile: docker/auth-service.Dockerfile
    env_file: .env
    volumes:
      - ./logs/:/app/logs/
    # restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "3010:${AUTH_SERVICE_PORT:-3010}"

  # driver-location-service:
  #   build:
  #     context: .
  #     dockerfile: docker/driver-location-service.Dockerfile
  #   env_file: .env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   ports:
  #     - "3001:${DRIVER_HTTP_PORT}"

  # admin-service:
  #   build:
  #     context: .
  #     dockerfile: docker/admin-service.Dockerfile
  #   env_file: .env
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   ports:
  #     - "3004:${ADMIN_HTTP_PORT}"
